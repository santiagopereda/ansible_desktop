- name: "Determine if Conda is installed"
  local_action: command conda list
  register: conda_installed
  ignore_errors: True
  check_mode: False
  changed_when: False

- name: Check if ~/.config/pyenv already exists
  become: true
  become_user: "{{base_user}}"
  stat:
    path: $HOME/.config/pyenv
  register: stat_pyenv_result

- name: Cloning pyenv
  become: true
  become_user: "{{base_user}}"
  git:
    repo=https://github.com/pyenv/pyenv.git
    dest=$HOME/.config/pyenv
  when: not stat_pyenv_result.stat.exists

- name: Check if pyenv-virtualenv exists
  become: true
  become_user: "{{base_user}}"
  stat:
    path: $HOME/.config/pyenv/plugins/pyenv-virtualenv
  register: stat_pyenv_virtualenv_result

- name: Cloning pyenv-virtualenv
  become: true
  become_user: "{{base_user}}"
  git:
    repo=https://github.com/pyenv/pyenv-virtualenv.git
    dest=$HOME/.config/pyenv/plugins/pyenv-virtualenv
  when: not stat_pyenv_virtualenv_result.stat.exists

- name: Check if pyenv-virtualenvwrapper exists
  become: true
  become_user: "{{base_user}}"
  stat:
    path: $HOME/.config/pyenv/plugins/pyenv-virtualenvwrapper
  register: stat_pyenv_virtualenvwrapper_result

- name: Clone pyenv-virtualenvwrapper
  become: true
  become_user: "{{base_user}}"
  ansible.builtin.git:
    repo: https://github.com/pyenv/pyenv-virtualenvwrapper.git
    dest: $HOME/.config/pyenv/plugins/pyenv-virtualenvwrapper
    version: "{{ pyenv_virtualenvwrapper_version }}"
  when: pyenv_virtualenvwrapper|bool

- name: Set path to pyenv binary
  become: true
  become_user: "{{base_user}}"
  ansible.builtin.set_fact:
    pyenv_bin_path: $HOME/.config/pyenv/bin/pyenv
  when: pyenv_bin_path is undefined

- name: Debug pyenv_bin_path
  ansible.builtin.debug:
    var: pyenv_bin_path