- name: "Determine if Conda is installed"
  local_action: command conda list
  register: conda_installed
  ignore_errors: True
  check_mode: False
  changed_when: False

- name: Check if pyenv exists
  become_user: "{{base_user}}"
  stat:
    path: $HOME/.config/pyenv
  register: stat_pyenv_result

- name: Cloning pyenv
  become_user: "{{base_user}}"
  git:
    repo=https://github.com/pyenv/pyenv.git
    dest=$HOME/.config/pyenv
  when: not stat_pyenv_result.stat.exists

- name: Check if pyenv-virtualenv exists
  become_user: "{{base_user}}"
  stat:
    path: $HOME/.config/pyenv/plugins/pyenv-virtualenv
  register: stat_pyenv_virtualenv_result

- name: Cloning pyenv
  become_user: "{{base_user}}"
  git:
    repo=https://github.com/pyenv/pyenv-virtualenv.git
    dest=$HOME/.config/pyenv/plugins/pyenv-virtualenv
  when: not stat_pyenv_virtualenv_result.stat.exists

- name: Check whether .zshrc exists
  become_user: "{{base_user}}"
  ansible.builtin.stat:
    path: $HOME/.config/zsh/.zshrc
  register: stat_pyenv_zshrc

- name: Check whether pyenv is loaded in .zshrc
  become_user: "{{base_user}}"
  ansible.builtin.command: >-
    grep -Fq 'eval "$(pyenv init -)"' $HOME/.config/zsh/.zshrc
  register: check_zshrc_pyenv
  ignore_errors: true
  changed_when: false
  failed_when: false
  when: stat_pyenv_zshrc.stat.exists

- name: Set path to pyenv binary
  ansible.builtin.set_fact:
    pyenv_bin_path: $HOME/.config/pyenv/bin/pyenv
  when: pyenv_bin_path is undefined

- name: "Reload .zshrc"
  become_user: "{{base_user}}"
  ansible.builtin.shell:
    cmd: source $HOME/.config/zsh/.zshrc
  args: 
    executable: '{{ pyenv_install_shell }}'
    chdir: $HOME/.config/zsh/
  register: source_zshrc

- name: Check environment variables
  ansible.builtin.assert:
    that:
      - "pyenv_bin_path is defined"
    msg: "pyenv binary path not defined"

- name: Check that pyenv binary exists
  become_user: "{{base_user}}"
  ansible.builtin.stat:
    path: "{{ pyenv_bin_path }}"
  register: pyenv_bin_st
  failed_when: not pyenv_bin_st.stat.exists
  changed_when: false

- name: Install python versions with Git install
  include_tasks: python_versions_with_git.yml

- name: Set global version
  include_tasks: global_version.yml