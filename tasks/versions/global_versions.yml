---
- name: Set login shell of user {{ ansible_env.USER }} to `/bin/zsh` with `usermod`
  ansible.builtin.command: usermod --shell /bin/zsh {{ ansible_env.USER }}
  become: true
  changed_when: false

- name: Get current global version
  become: true
  become_user: "{{base_user}}"
  shell: " {{ pyenv_bin_path }} global "
  args:
    executable: "{{ pyenv_install_shell }}"
  register: pyenv_global_version
  changed_when: false

- name: Set pyenv_global_active fact
  become: true
  become_user: "{{base_user}}"
  ansible.builtin.set_fact:
    pyenv_global_active: "{{ pyenv_global_version.stdout_lines |
      join(' ') | trim() }}"

- name: Check if 'system' version is available 
  become: true
  become_user: "{{base_user}}"
  ansible.builtin.shell: >-
    {{ pyenv_bin_path }} versions
  args:
    executable: "{{ pyenv_install_shell | default(omit) }}"
  register: pyenv_versions
  changed_when: false
  failed_when: false
  when: "'system' in pyenv_global"

- name: Set pyenv global version to '{{ pyenv_global }}'
  become: true
  become_user: "{{base_user}}"
  command: >-
    {{ pyenv_bin_path }} global {{ pyenv_global }} &&
    {{ pyenv_bin_path }} rehash
  args:
    executable: "{{ pyenv_install_shell | default(omit) }}"
  when: "pyenv_global is defined and pyenv_global_active != pyenv_global"